project(HPCCBaseLibrary VERSION 1.0.1)

set(HPCC_BASE_SOURCES "")

if (USE_ACCL)
    include(${extern_accl_SOURCE_DIR}/driver/xrt/CMakeLists.txt)
    list(APPEND HPCC_BASE_SOURCES ${CMAKE_CURRENT_SOURCE_DIR}/setup/fpga_setup_accl.cpp)
endif()
if (USE_XRT_HOST)
    list(APPEND HPCC_BASE_SOURCES ${CMAKE_CURRENT_SOURCE_DIR}/setup/fpga_setup_xrt.cpp)
endif()
if (USE_OCL_HOST)
    list(APPEND HPCC_BASE_SOURCES ${CMAKE_CURRENT_SOURCE_DIR}/setup/fpga_setup.cpp)
endif()
add_library(hpcc_fpga_base STATIC ${HPCC_BASE_SOURCES})
if (USE_ACCL)
    target_include_directories(hpcc_fpga_base PRIVATE ${ACCL_INCLUDE_PATH})
    target_link_libraries(hpcc_fpga_base accl)
endif()

find_package(OpenCL QUIET)

if (INTELFPGAOPENCL_FOUND)
    target_include_directories(hpcc_fpga_base PUBLIC ${IntelFPGAOpenCL_INCLUDE_DIRS})
elseif(Vitis_FOUND)
    target_include_directories(hpcc_fpga_base PUBLIC ${Vitis_INCLUDE_DIRS})  
elseif(OpenCL_FOUND)
    target_include_directories(hpcc_fpga_base PUBLIC ${OpenCL_INCLUDE_DIRS})  
else()
    message(ERROR "No OpenCL header found on system!")
endif()

target_include_directories(hpcc_fpga_base PUBLIC ${CMAKE_CURRENT_SOURCE_DIR}/include)
target_link_libraries(hpcc_fpga_base cxxopts)

add_subdirectory(${CMAKE_CURRENT_SOURCE_DIR}/tests)
